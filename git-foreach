#!/bin/sh

#/***************************************************************************
# *   Copyright (C) 2014-2015 deso (deso@posteo.net)                        *
# *                                                                         *
# *   This program is free software: you can redistribute it and/or modify  *
# *   it under the terms of the GNU General Public License as published by  *
# *   the Free Software Foundation, either version 3 of the License, or     *
# *   (at your option) any later version.                                   *
# *                                                                         *
# *   This program is distributed in the hope that it will be useful,       *
# *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
# *   GNU General Public License for more details.                          *
# *                                                                         *
# *   You should have received a copy of the GNU General Public License     *
# *   along with this program.  If not, see <http://www.gnu.org/licenses/>. *
# ***************************************************************************/

GETOPT='/usr/bin/getopt'
SHORT_OPTS='nq'
LONG_OPTS='dry-run,quiet'
DRY_RUN=0
QUIET=0

RESULT=$("${GETOPT}" --options="${SHORT_OPTS}" --longoptions="${LONG_OPTS}" -- "${@}")

# If getopt failed we exit here. It will have printed a reasonable error
# message.
[ $? != 0 ] && exit 1

eval set -- ${RESULT}

while true; do
  case "$1" in
    -n | --dry-run ) DRY_RUN=1; shift ;;
    -q | --quiet ) QUIET=1; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

# If there are one or more positional arguments then we just pass them to git.
# Otherwise we use the default command which displays the status.
if [ $# -ge 1 ]
then
  COMMAND="git ${@}"
else
  COMMAND="git status --short --untracked-files=no"
fi

DIR="\$(dirname \"\0\")"
EXPORT_REPO="export REPO=\$(basename ${DIR})"

if [ ${QUIET} -ne 0 ]; then
  PRINT_DIR="true"
else
  PRINT_DIR="echo ${DIR}"
fi

if [ ${DRY_RUN} -ne 0 ]; then
  REPLACEMENT="s!.*!(${PRINT_DIR} \&\& ${EXPORT_REPO} \&\& echo ${COMMAND})!g"
else
  REPLACEMENT="s!.*!(${PRINT_DIR} \&\& cd ${DIR} \&\& ${EXPORT_REPO} \&\& ${COMMAND})!g"
fi

find . -type d -iname ".git" | sed "${REPLACEMENT}" | sh
